// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database; System Configuration;
// Memory Configuration/Devices with User Add-Ons only; use Element names (no NickNames);
// rung/address annotations; <SPACE> parameter delimiter; 
// Write/overwrite file C:\Users\njost\OneDrive\Documents\GitHub\Factory-4.0-Fa21\Factory-Fa21.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
0d62d02a30e6aa444fca5216fbab3573724b25c1394521caead68e3259025b55ab7b8080b1eeaacb
fee75b9253b0ab94afcc24bb59cda746b8bcd269d8054e915dd65869da8ed2197211cb6cd2f7a5dc
7fc5985f074411b6b7142ff47eb796a209cdddd2e34a4cd16461398e220316d6086687e7d0d17961
d046e47992e907352c1cee044aa62409e42e0567e14beab5c007176aee4e73277e26b73b8948ae08
324c3658e117e600e5333a2a4329f3bd219f78d3af95a27db00be7f14c8db280d1426d1402d40048
0e3d43c41c50423763aa8965d1b2da7c5e23a964a5ef8ca29172ea8984898386eeceef7ef36b67e6
0b8edb1aa12f7a79df82f3c811106182b0c264c301ec8cb4d55d9d056eb573fb33a9e1c3e88150f1
5611703256e379d9c004e0bf40a70bda18e48d70bfff805975e4575d6dbdecba4d52eca0f8922fb0
2bbf54874d6ca46971b64d09a6f916388f02696b9f50043bacfc18eac9bc28e3ebcd81e755130470
24a5c028ff98b9a9b5ebf9e08347b0ec8297e858144146affe3e76c5f09a5fcb6e111b2d7d4bcaa4
324b86d70a444f404a6082b760dd9d9628c9223545d76254258f3487748da5b4b6fc879e1d50bd00
e7edcf6f8755a427ecb6702d4b8d26c909e01551bb83c3b579dd6fd3a6da9f174c30a0e9740ed544
9354e983ce5ae709626dfbfd2b4db6f67acb6ae5c129bd3446dd14da5a88a1bf3de10b015b35c2f0
13d7c95d9d44ea29a96d270cccfe5780f5223fb73bfee2c0f0e5179376195e16c5c280ffefd44713
95b31103c0718c8e9ecddad26c7e21846291b782c34b5539f32832a712f3fba28cb62fa473b95aef
1eae0e9c09c5a37dfe1687e7e122c505ceb7901d122bc89221f0120b5517e919add354e0d3da8e25
1009661c4b08a97f802f68d3cc7e7953a5c1e47ab87be83501649e44f0ff52273dd200741af864c7
5e31bfce84f080ddda2a1217d9e37189e6465c140c214d6dfe375ec2cc7d7b2b1924baffb5523ff6
4c2d4647c0a4ba5cc07e9f649fed85b2cc5c1cdb9f4a5e65836dec892eee045104b1cce1bb871550
7d13ce1e754a9759253cf5d51223ac2a554eb415b6f7bbaa8670de3b6b78d5ba9adc859f788d64cc
543db5aa8587feffe92b917d5f662a3c4ac8d1d7bcffc108a861a8a1b06a10dcd71f56c57a0160fd
7f30bcbe35459fcf1218264452e4af585deb40061f0815efbae49245a8c11952534b05a94936e3d5
0af1b6e2c827418696c99176fa068ec9cf691e8443076e6420142724cd5b849760659ec3cabad401
ae7a01960f9cb7e083146eae28b2137c698174c7e825dca5db6dd5ca9f830d3848b47b053252112e
0afbce378fd91151f80ec24ae46e4f24c047cd63e5d6dd31ab4a9ebe089d186e2d54bfa0beb32904
9149ba6b0697b6b1fe7c9ca4c665872d42d26de2e71f85c6dbea6c75e6005b52e8fe1b2e28e9225e
443f7ae78e2375b6dd4fa3852a9dd3ebb69b9301cf26fdf87e9d3689e3ca86b31e5e8284c6decc41
4b1fac1e9aa5567b5f170d973c09693f9a1f359bac594f0b9645ee6c0cd72561e185c2e55775e0e3
d06c9329aebe9831076a9395f8af838aaaa289b387329df4d472e9680aaa5050e81847dec2976aff
b5d60f0760c1bb7bf33ce2cff15841858c73d19637f502c228a80876343a7d2b300c51166252cc8e
d35d60d099a634b0977fd6501f05016b16f05ec21e6c2aeb835445145d08a460fcf3f1ce7c45146b
ed73bfa0e63ce1010d21006a5a0a05a4b8b070c6c44d7e7fae5833c6df09af9e1da67480c136e77e
e74c3a577a77985c9cfa6f4445de363acbde09f176b21089a23de1b32678e3f6e50509a54adc7cb2
442fda41d186a4d822706aaa504865015480c8dbc0d593b6ed85fd5399fe4bb91a144df2ea34d7f9
8de4c914013862423e110147bab51c24e275146348ba8e0a58cabc7b6ad552c5cdc9b93b5bc8e3d1
fc918f75a12965d28e43f976560306ef1129396d27c5b713a34ecdb38002d6ab4b8700bbb5044c7f
b37d9041d80ad2763434cc9219b2214336a6b578d5796caa9bfd2c906fa5246ab0000f56e9742da4
cb83a1a25eb09f85d1e2b211bfebdd920a1f2e7c0bbc2ea00ebb7610b45f816f1628313902d7178d
b860544d2104e46d18bdf1431d50e19dc529411a494d728dbb828eb612a4df75fcdf9f2830dcff16
f8a2bdf745b4f5649ea5f7703be82abe820a1c6680507f7c6213f12b5d20dd279c54051a7002f302
c03a0152d11a24e47044ecfa8065b55a65d17956c4f482b451ef0bb3aa0b3948c7cb4b8600b5c58c
b5576d99bd1d76bb224187cc10456c1e694faa15b59c99331c73c38db8fa0915740b086522902b4d
babfc14e85fbedf04a093e08af03ca8d240b3216e99fe543099dcfc95b76a95efb60178798bf5ef1
888e84724ec0e82ad62a402b768adf1237e77c624eca07226df56550784f20a98053fb744fb4e9ec
f548887d4f0785cb7207afcec0c30298bb67740be8791bfa3eb8c41394e91fee6bc1671511d81757
8ffc662ccadd9507e05221527c79e7de531e7a6404073175755afe561182a7fc157b6df89de7cfec
c64155679353d6fe1cb4c25310a6ed8670c18423bfe811cc7b3c378fabcd2bf17ffb335fd4b0a5bf
ce9f02650d7437b50dc46ce9b6030c4b26dc5e97d6d800240e7e9732c1e5a59e4a4d711775319dab
0869bf4b3716557bd3927458be2605af5091419f003139b523897b8d096833172e4f33b080802df0
5486b75980088a8a8141e102f9d1ee84c2b7948a8b4e4b55513f16283f91684fae2707c5b53a58b2
53790e126eb02f8bdd8ced1c565d3263629934cc7e040b8f3c96fba23501f7cdc9f9fcf865c2de4a
4a2c71344c978ba224a61e7dd99ae4c43e3a618aeec4c599cdedbdb53efcf2bd268198f03d06d4cd
c23c2e14dbe0136c58bd1ab7eec84bb0f7fc25d84e92a5dd1720dec715290d6f0cb79079c609c011
3d621d3a3781a5a2d3279d0cf88533b7e20c519c3305794edbdb2e37f4cd7a75e4277813c20f00ad
986345d121e7c53235402ce198ad9c6e82e773e57b50150e0d1cc0b6f6b3ec141a348926543e13d5
d39874a0eea396bf9b79283130c76593dc5e49499a97f01242bb469c1527ec1de106174381590a1c
a84f07db851872d8e8537e9db8cbb583ed3c9bd935141b8ca8037a3db9a43e2a54d3d3b12e42cfcb
eaf7db82fabc62c9075f78921008a13d04ea36c48cd208f450e5e2b54e422f658e6abe71b764235b
b8871b844f16f11ac7c24b3f9a2faa96803633671b030960ca1b3758e8a588ba7c5ea8bfb7255652
95b5d2379c520addfcbf756119664565c8084767e4fc220c3d501d8134fd3943fe36e6d8cb5a45a3
0256541c560e8b96a312fcc480044aa056c343664ea639d317cfef2218d0724782ceef691ecaf7e8
ae041d23781068064b098994a1100e351c4aea716a0387cf2418f64f59574dc170ab549d36879cfc
a3ecd99c5511f381609ce4889ae62d1208484212e34f0ade9e0293b044f0bdf24c1bba72dfb107ad
b1878c2a52894bf06e75353f6f9af683a76e5112d3a72b34a4048cf8a61051b6a2ca33af93e3446f
60930b93bea84ce66baea9d8d44654a9085459940003cc3d137e8fcbb94924c6bfb0852d0c95d66d
7548256d8dad33c23c9dc14c8e72a09a42fe3e2eaa9cf299b1df21b5f5a94b7753069c07a292a735
4dabf987385570500b62227ecc746bd6b6b48d0d89f65f1e7aa79bfd8aed0ff0d2fb562a9459c484
b2f81f36c1dd8401080db44844b72bb39e88730928764bb5a235ea12b3ef6282aec74529c0205173
2549c15affeeb330a885937802d1ffabfec99abddd3730f82080c625cf690644a0aeac4b5a9b8cd1
33f83255abd1c44cd6607d2e693aa5bc63b78d5c66be029a8a90b66b54623db7bf3e44c1ea1f7327
f3b32fae8d15078428a0b63c5bb946bc1690a96a2dd4b13f2766819541f91e8db284a3a8b6010e95
8970065a8ece52a152dc69c8720bf166450195d5893b83ecd0a0072c27d4c1f02e00e123f2373041
7566325850ffca2d01f0d9fa82ee985785ae2546d9b28855b017659557b5c87b5f9360c66786522a
004e0c43ea1b4e3ce9379cc27f9a21bd4cf46749db72600e260247c80362b85d2782ac9e3f8bceb9
04daa1fea4b7d9ff6a72c30c35ece5b8ecbdb64883a63d50670dd04489002c357d3c658259db52cc
dc81b079a3f87274fae33d63d778d00c1379c907d53f8223282b43a450a621ac16d8ad2a33f9a0f8
802e78ce8633f56d211b4576669eeabf88db28da8a0271a09aba2cf2c9ece9a4a578aa352fe6e2ec
526e84fde6dc129c0dd609c0af803ef7aae3e1dd5c1c4123191dbf09df6f08ed61d9e50fb6b0beb5
9eed367694e607322c2991ede2d16e5f8927e399500ba971bf2657348f1474eba4b13edbd225679e
52612fc5bc9bae72d204d483840acc118ceb7d335f2a231e5421aa0444c18fd8ddc55995122a176e
0018a71c6d2413aaed57f7c3c056b6a521f490c8a546496662d72c1062cc9e0c33072a36a22bef95
8948dc2a537f9d13112c2c41a3935bef9f69cacda51ee63eeec19ab8f9fb61e6fd12a20131ce8a0a
ddac448ec82806065a67bee08721c4ed14c2726d34bea2956c76f8edfe56586626da2b4708925ec3
1c423b9a82fa87f55062f54818a49427d2c4c5026a77809468851e2c23347ec5486ac4335207bdc2
92ffc74742c4392f0c9c3b85a16ecaaa5eeefc4aa12363705249b7e88145801e477d00ed35425ae8
fa4ca75338130fc6d1361b1db96a86c815ee2f272d3585179d00f74d3b0d9e573dabf9076c044374
072968b143f76dfddc0688ba0a26c234d5441868c29b4edb3356380a1fb2a5f96cabe6a1f4b4532b
51fe87d6f0f3b87244dbcf02bd79aac7cddb811a112723c6b863575eaa09af3d298491cd589fd295
c00625b5202f000ff8cb418a75553ebe77fdd893b3e8c98392cd0a55568a292f4c02da782d8e340d
002477257e8a806d19830add326c97a1b1c657351da37b4aacb6ee6c3ff15554a6ac612f174fc7a0
88b5c3cd2db3a0a9ad67e97b298acfca2145f0c47a7fd46406b6bb3be6e2fb85b6d97bbcad95ff0a
33193866f13cea6d016453821c1809a1ad72d75f2692ad9f7274b176183e71078650ce906abb39fa
f1abf1ca376ef8ab7427f26a4a1de17d69ac168a4a193b1dbbb86105ecb52cfd2119c4f10047b1c9
afeb8728de61a59c5dad60ea707b5af784808f3096e89e2c96637b0b319dff22faff0c9b607722cc
bb60726bac27187958a12157aabefc19190bfb2a52f8809674e5e2b1b9cb0e078229fda09f12e731
eb7d7c5d4c3493c7a65faa41ed9a1e0c56388fdda20ad8ed14fbf9dc4f693b1f110df658be455318
f5b860cf80be635033687644c16483276db2702a75d83519fdcb95f2ca3aacc97ada2dc57ec7e77b
9aff3fb752ecf2f78333a05e46f5211eb5ce97df5973210a590eec2200040b1d7bcd1e19d705c8e2
605442ca918a0975ced4fd36cbc8b216f1fcbe8ed53a0f0d1a0e63f191f736d95a47a11523e3b075
f34c82aed794d78089c796208ad03f08ebb93617212a6ef37bc3dcaf90791bbdc4b1fe2a7ba72dfe
9b4a88969a23fdad6d7c54f611e3b9cbdb6027f8ea55a9550570ec0abe0da87442f77339b82948aa
dca8c5a3253eb1c1bff25579e598db8116c506f3b2655c1e66874d5ee5893b7ef1c60fe13a10e502
8407eaa1e5b68cd33375da521e228718402b2a803bb0abfb39a7ba41b7b02f327053545c495fe3d7
b7d7b55dcebaa67fc80ed710868527924f7c1131e63def6fe062e62ec6f156f5c254258b03ea8dbf
bf22161aca80faae26c4339627d52e2ba64f03eaea4051f263f1afe3d798d361b025cc2f81a4acb6
94ae90b538cb53cfe6b56fc1f930cdfd68b44be4fca8f5e86f343710ac1c17383d279fa3f819f311
b121cb25796e3c8389be162e3a96ea27f565352c9c274ebc9bbbb14ab8dcbe0e2958f36dfaad920d
1a536af3c468b93fdc06bb9d68bd95e710ed53a47473c485695194375de417763e7feed7dc054423
9a65225cc44f08c5381f4019f792bfb9b182bede4dd5deb0ee406bc7f1931fcfeee55615abb7c929
0004eae9e2e1a9913faacb4906fca9022be5b088c2f142c3125a0b2414e9cf56b6741a3a09eefe98
65bc2b34e14c7dee31080ad85baf17e4ae01a9ccb158bc9739f7fb5f4996d21c5cc9345568f6f313
a2b1766e4f8cd9b77798b661f397bb85c867028156f6925ea15798eaa89fe64d4bdbf64489d5fd7b
1b1e78e3310c295ef06c205daa2f917c8182d689d21221577294bdb8157fd75cec6194c3edc79526
db2eadcd7109f905dcaab9bd0cf7bfae0e1721ea27230d4182854e6bddfeeb4c96cb6dc5c78b6c7e
7bd3bcdbe44d8a6d6a938c4ca1f185fbf541f372d9a0a3bbe384165c32e041b94abe8854f69e1e9f
264d49849894ba86cdb3e426fd1640c91ba67c6618ae521e3a3536515df40959df15c61984b97c96
a0afc28a035580a49ac8f7c58c59ffedd8c1813f881c8539538e033edeedd9f7ce552d8d97987d20
83430115df2ab312193116568dfaf0d98997788d3349f4c4d1f38fa97360f4694cbfcc42a25b33b3
3a02ab5e535077732ebbcdc3b03c3b31a5a373b9e345ed724024cc2436bd4dd88764c53e887589f8
37d2b175695e407d9ace697aa43567de1eed2ce074d5109ad14ee7a0915e31e7c1a50d3923938b82
61bbf1c0bf2c874a05a34892fed7c23079eef1d25df07a7305a5c9cd1d4239f203af22d869f2684b
df1dd9a94f198846963c67a1ec7233e91ea942b0341cfc3d1bab7ba2368648b33ea455b1ef2d341b
c50620006978ba31a772853e849e9224e406e0012e9b74bc44aa19c66c9e4abea84b7182f38c9a4b
cce1c4ebc02583a42ff4c109a52053c364c9fa44aeca8efadd6bf4ce44ed1e193ea1828154b14877
d54dcab7d31ed798d56f0f65ea56896df8b8ae55216a7f29779f3571c074d61cfc18bf1b4836fa86
2fa7011a82fdef89296a6275107e4f02e136d3d053cef57e280157cca6e8e1971e921cb7517fc4d2
10a14a1ced1974f6277fef0990ebdbf9d28930c3c5feeb0ed08df024b02201d4b482a8e7b801e913
fa0f5b6f34bbe00a261f3063ef827151981f0639313563fa6d25d4b4b94062d43dc489dca89d1ef9
9ae5dad6e99dc747220ff743c61381ec8aa20abc010f2298819d8f00cee83dfa98339f4aeac333ee
babae5480ccfeb761457f9035dd5339edad10daec71ff02c9df16faa3aed0f212921311287aa4a8b
943e80d3d27473eeda3398ac377606d592dc4ad564b209dfb962c1096f537f734e9f187ebbc05e3f
ae8d176b5aeacba70fe8b9cd33b3d6b3c3baca4b20911696096e8113cd997574342aa87d18b54e23
58b3b916aec1d2af4e67035bcddcb90aa2d4092f1e1e8c3d15122491b0db8cbedf3f38c077f085ad
aa9f265f51ca6d3e2a1a051948c0206e4d101d1627f70a1d273231dcf1f46f55d1d3a4d9dbfe8a83
184fb40c1e636189bed937fbafcd97b6c7b5690f64ee987b3f9a9a4c497b14825dc7ecf92e03a655
40f51a7a2bc4dde2dc49052d0185705869a17ee7e78b819dbabe6a9f5fc11c7c56bc59f7e3b5c8c8
dac35069a140ff6a25de390c55ced51f6d1b78570b3aa3c28a12d41bdbce5535049db06f10bcadc2
03e3001aba8c9b08ad10cf6532f550cb309c412cf57dfd8cae6cf6a64f781ae9c0c7a2d43007d231
d27acc838f679c8b394d4612a1dc5040cfada7423b5b6d3b0b2940e80005c2121245daa4116a3350
e7436fe872aaaf3e607051a70efd0a7f150e80699afc907436753301b564effffcd3e52685500126
bb1451d5db457d0136c79361c6e3a9a99dd2b7e2cb3ae1566b6d36b75472635aa3f07435d19021b7
56698bb824f58997bdb59e2fdbd2917a88861420f066376a48b76e836f661fd07e72d5200295a216
17f117c0fc2d15697eceb61f296c792791f8680045ccdec53a711969781070cad253dd235d00fb18
ea1ecd64aa067046c7b4646ee2d9317f7330dbeba2a4ea192df5293b84db07cea0b09a45012e0c8c
0fc05ff1eeab457a882b189afa171a8eadbb6649988fecb70ef133f3b5495c26563e58d0b5d3f2b0
5258e21217bb27189734f6242c3626b9655b0ad63de88a5493570236a495f852d39c95ef126f73b0
6c32a56e37f86d60cd23df43355381e9d5ae8979dfcd2e8638ce64d26f85025442898829183d64d3
dc5b656b124d13d29b0a0f71eda262e5a320882d97a49617a9cb6d004a91f11fc7011f2c50fb5eee
4f7f952a40f47cd4d2500af06548378434638cd513cce5f88cfa51e7b62640184f2c81a06b64e533
77de2f50b5330e3319dcfcd9fdf67c2f790600bd10fbc2481986a185fc5ea12a515157eb0020d798
96496ac3eaa8825d740648afbea3a076367232faf5b3e274cb16ad5aeceeb2211b9afafc1ee93628
5b416bbafc5e7afb36924d67131605fb7495bede78c97631fdc37eadca53ab30ed99d5ab8c356602
7e4362fa9c9acdf1cb224763de76cbc4c315947a935bbc9c8402b4f71b1ec40a3b4b87abcb9a16e8
bdc8a8e2a20818fb3b8c7025fc1c1ff01f3e6341dd21edd2577f2ce30b91746ad3e673d55f2f11df
2fc4587f16dc2eec5abf49cf64b28955daf07c429e77b6adabe20b4d2a0f7caf4745e3652e86a4ba
dcecb0628462a82cc360742403bba87979f9dbac72670a76e7a1157360917743497d04600a6af449
9c3d4d3965e44dd00fe147d19810458732c118440771151123f440d5422bcfff753165ce57bccc83
3dbbd5aa02862a0cc83305634f2ed259dd6b21067b9db2b2a5df9f9e422da40ded8f36870dac79e2
ab3053b547aa2b8cd99e11813b4fa4ddcd8e362b5da161139487c9ed2f713d52a2a6ff8776dd3e29
304948f063b7cf6fd8aaef7cb41eef28dd865409fcf5fcfe2d36d9f4ecb89988f9b4a378856cc2bf
f18ad2f7aa2940707671a07cb3593b3418888591dc12f4e6a36133f630fa0f970a42d7cc67360f7e
cac4bd135b41b1276a238fd12e2d351b5d8da79e1ddf55396c04e3c556a903497c1f928c0ec86e5c
f70705a21d0dc9efc9e1364c2f2dd1e04a375b3fc648f18990a1e29ae4acd4e49101648429ce2259
ecb912ea9016776556eaac20351d2bbfcaaa9b75b4431d56b1fdab75f7f4289e7162efe024617e0b
d7bc6dc65c7600638e93d8dacfaa692a3be35f766175a5ee8453c3a297b447df4010e7cc99e07a75
1f8a058fbd56e3739bb0ffd1475276e51c41b41652d94b8703d521d4795d6baacefcee8b5d31c551
ced225dbdcf050468ed45be95da110055a4c5a126a7ae9ecefe071aa45dd3ad61c1757688937a1e8
b3ca3b94012ce3fb15a63214c4589310ab130d4b04b13134c33685ae7cc3668350118af4287d9f91
55f320c5f0a30afd5257c626ebe3e644feb88f815c62060fa3bd07b37ed6fe32f1c7a3b3abde47dc
04110e6288aef5dbf7bd7c4260fe80e7126590592dfb8efcaaabb7d3a929644566af1c3f4dd2b21f
cef609eb1ebde183ee5ecb0c6698201e15ecf3bcc780022a6159de14a8fafcbe1bc656d5b57639ee
540a0effe7f126d0abef5844d88be61c8e3dfec332c67276bffeb9409271a881fdfdf2b208ccbe40
f8f1a6314875f1a00e8a75fd91c616dbe6e8bf7286ab2a4845845ceefe553d6124e0dfd46d460995
77b547970c96ee2340075ce98d466a330d943f66959138ad7292e6e828ca8624b160abb7a7b99441
5da2d5249c60b615b4b8384fae49da06254706db62d049b7ffc3b8a67d83393c3c1ac875a0fb805c
677869f01e9d95b74d28417031e54cbcbbf7432c29ee19f1838355171e13a2050ed2efdaa0405f13
72b8f905eb9f3de5e51ff5a01d8bf6e9c66c9b572633f0cbe5b116355b24f1c38fdf71bf1ce830b6
4fb8d3a4bc45d45aff9aaaa2d1c409bf2c3dd8535bad8d37e457497687602156bf1e34468a3c9158
e36d80889f4ac6465fde560c6a23131b23ad1648f8fdd94c218d1d990b1f71a7e56d8dfc6d89a8c3
a7f9f725e88ddfe12ab30d3655c0c58e7b53d62317d6fc122bfc602fd77453a5ede08c93fa336dc9
72344d75780d77b1ad7463d2e2e29a0e7b4cb1bef28f5c0f35208805918a8c01bfcfd6c0d1b93ca5
79bbed050eeab04f15208e26dd15d810081d7ccdb63df93491b23799fc316a8662b424d52a94d1e5
c22d7f2ec8d89210e2c33644009e4eab068d054fa3159cc79810df9237a91305495e1610aa6a6e8c
42716d4609e7d541762c442c5d6ddea3956f37f928a05db9259028cd59d4d6576544123523afe5a1
6103b18a8b3438db282fb5d2bba715e53ea34d365751965808ce22fc2984c8be4a83a1bc1a1edf43
f33f425305ebf222893c32366456a33c87bc10351862aaa5488b8fcc0af7c89d96035b3628630b97
0d3f9d78b8d88853d8fb561587729fb042eeb1ae23535e7c78d43159d98f0d01674628b4536b26a4
8b54ff901c5412ed10c8a2d17eb849de8febb86297baae3ff29e7873ca431873f4947948719ecd64
d481fada6b96dc6612c86026acf8855bca801d79bc15e5caf6948d612c6108f18099a4ac4cad338b
c94fcd3fda7e84b396949e486532834875c07b056ac5cc55681908492f895aef85fb276615202c76
e3f4c2f14aea8390a36d34f6ec64f1ec469c9f57a796c908fa3796bc9966ba5ad7a1633b2e31eeb9
9a889a86308ba575d0ada5ae6a6a9478873719a443e16772acce0a3c1357f3106ae1a2b84bdb39d2
93f9de457aad9a3f1c2628aa30c7927975466156f8e3aae599d92886060827a3f50e4f1cc04bd080
066abcc9cb0fdfde4f3ad9663a3d1ebaad5ae17db9d05615fd629f5a3602b4b2d419e2067288c328
590c6eca997137f83824d355f3136ea3a952d337fe3c6775e3c65f127668a3934af75b0e72456b9c
94c5bd63022a9c19a4687b0080401e4cf0f8b21ab59b0ad4c90511ae58add07e8d8593e5e4793679
8206aa7ead2d809180385ba32106dfe3058f295f961bea89c8f0f0776be132bcc985f59623d771bc
0051fa35c2b6c6151d0b2659b1c96b81f6f55fedb3ae27338c0cff1cf96f998b3a2a6c7f8917769e
8a0af902315bd83bd75d438b43a8aff6d8782e315a2c4e290e6cb4df67f09e194975ab6eb75c9273
794edce8bf04db4562c7e437d860be4d01425e9597a030cec489e76a6ff80a9dcded22e4400f841a
10f9d3efbe4bc21c2792e8cdae9d6bd260c39f670a75f2fcfff24884f1b183df6a7df3ce3ea2745a
955f2ec3b7e9525e64e92fd148485aa834b1bbb531756fc34dbfac395054a54072564d0235ef0be5
091ff7f286a02e22286af2072707557b181d7b7131119a75bb21b50807228067c0ccd31f9bcd7b0c
21acaaec5c83ee6d00b12b67eac9e35ea71ee6490c461b1131485841603263d541f658afb920c091
f9f2d85ce1500001343f8e5c763122c1732ce70b4d45d335dcae717f59c00e5dc8afd39f945aa48d
b20595a09fb6b03ef8f79dae0960c473d1d767b2c2833e8d81aac2c3d865d9f1065ba2f62ee63aad
4009610cd6158c0032fae19f4cc5f0fd89f0792adc5ae11643b94050913edb1eb611cd2b2a3b9cf5
ad18ac841f61c137ddcf762f46622a8dd64d7d7ccf21e2946b746430c2d8805f
#END

#BEGIN MEM_CONFIG
 HBW_Program PROGRAM  0 -1
 HBW_Copy_State <Virtual>  0
 VGR_Program PROGRAM  0 -1
 VGR_Copy_State <Virtual>  0
 VGR_Suction <Virtual>  0
 MPO_Program PROGRAM  0 -1
 MPO_Suction <Virtual>  0
 MPO_Copy_State <Virtual>  0
 SLD_Program PROGRAM  0 -1
 SLD_Copy_State <Virtual>  0
 SLD_Suction <Virtual>  0
 SSC_Program PROGRAM  0 -1
 PID_0 PID  0
#END

// Beginning of Code Block HBW_Copy_State
$LGCMOD HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"Copy State"
#END

STR ST1
COPY 0x1 "4 0x0 MC1 C1 1 0x0 MC2 C2 1 0x0 MC3 C3 1 0x0 MC4 C4 1 0x0 MC5 C5 1 0x0 MC6 C6 1 0x0 MC7 C7 1 0x0 MC8 C8 1 0x0 MC9 C9 1 0x0 MC10 C10 1 0x0 MC11 C11 1 0x0 MC12 C12 1 0x0 MHR1 V1 1 0x0 V2 MHR2 1 0x0 MHR3 V3 1"

// Rung HBW_Copy_State#2
// Offset 35
RET

// End of Code Block HBW_Copy_State
$LGCEND HBW_Copy_State

// Beginning of Code Block VGR_Copy_State
$LGCMOD VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
STR ST1
COPY 0x1 "4 0x0 MC400 C400 1 0x0 MC401 C401 1 0x0 MC402 C402 1 0x0 MC403 C403 1 0x0 MC404 C404 1 0x0 MC405 C405 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC3 C3 1"

// Rung VGR_Copy_State#2
// Offset 23
RET

// End of Code Block VGR_Copy_State
$LGCEND VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD VGR_Suction

// Rung VGR_Suction#1
// Offset 0
NOP

// Rung VGR_Suction#2
// Offset 1
RET

// End of Code Block VGR_Suction
$LGCEND VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD MPO_Suction

// Rung MPO_Suction#1
// Offset 0
NOP

// Rung MPO_Suction#2
// Offset 1
RET

// End of Code Block MPO_Suction
$LGCEND MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
NOP

// Rung MPO_Copy_State#2
// Offset 1
RET

// End of Code Block MPO_Copy_State
$LGCEND MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
NOP

// Rung SLD_Copy_State#2
// Offset 1
RET

// End of Code Block SLD_Copy_State
$LGCEND SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND SLD_Suction

// Beginning of Code Block $Main
$PRGRM $Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Mini Factory Fall 2021 Project For CS 453/454/553/554 "
"Advanced Robotics I and II<br> <br>Date 09/17/21"
#END

STR ST1
RUN HBW_Program

// Rung $Main#2
// Offset 3
STR ST1
RUN VGR_Program

// Rung $Main#3
// Offset 6
STR ST1
RUN MPO_Program

// Rung $Main#4
// Offset 9
STR ST1
RUN SSC_Program

// Rung $Main#5
// Offset 12
STR ST1
RUN SLD_Program

// End of Code Block $Main
$PGMEND $Main

// Beginning of Code Block HBW_Program
$PRGRM HBW_Program

// Rung HBW_Program#1
// Offset 0
SG HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#3
// Offset 10
STR ST1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 100 100

// Rung HBW_Program#4
// Offset 25
STR ST1
OUT Y5

// Rung HBW_Program#5
// Offset 27
STR X3
JMP HBW_Program.S1

// Rung HBW_Program#6
// Offset 29
NOP

// Rung HBW_Program#7
// Offset 30
NOP

// Rung HBW_Program#8
// Offset 31
#BEGIN FMT_COMMENT 
"HBW - High Bay Warehouse<br>"
"Fischer Technik Factory 4.0 BRX PLC Code<br> <br>"
"Resources:<br>C0-C399<br>V0-V799<br>N0-N799D0-D799<br>"
"R0-R799<br>T0-T49<br>CT0-CT49<br> <br>MI0-MI199<br>"
"MC0-MC199<br>MIR0-MIR399<br>MHR0-MHR399<br> <br>"
"Put what each variable does here.<br>Input Bits (C):<br>"
" <br>Address Parameters (V):<br> <br>Module Data:<br> <br>"
"Control Bits:<br> <br>Output Bits:<br> <br>"
"Stages:  <br> <br>Status Bits:<br> "
#END

SG HBW_Program.S1

// Rung HBW_Program#9
// Offset 33
STR C5
OUT Y39

// Rung HBW_Program#10
// Offset 35
#BEGIN FMT_COMMENT 
"Move Up"
#END

STR C1
JMP HBW_Program.S5

// Rung HBW_Program#11
// Offset 37
#BEGIN FMT_COMMENT 
"Move Down"
#END

STR C8
JMP HBW_Program.S6

// Rung HBW_Program#12
// Offset 39
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#13
// Offset 47
#BEGIN FMT_COMMENT 
"Jump_to_stage_0"
#END

STR C3
JMP HBW_Program.S0

// Rung HBW_Program#14
// Offset 49
STR C4
JMP HBW_Program.S2

// Rung HBW_Program#15
// Offset 51
#BEGIN FMT_COMMENT 
"Conveyor to VGR"
#END

STR C6
JMP HBW_Program.S3

// Rung HBW_Program#16
// Offset 53
#BEGIN FMT_COMMENT 
"Conveyor to HBW"
#END

STR C7
JMP HBW_Program.S4

// Rung HBW_Program#17
// Offset 55
#BEGIN FMT_COMMENT 
"Move Left"
#END

STR C9
JMP HBW_Program.S7

// Rung HBW_Program#18
// Offset 57
#BEGIN FMT_COMMENT 
"Move Right"
#END

STR C10
JMP HBW_Program.S8

// Rung HBW_Program#19
// Offset 59
#BEGIN FMT_COMMENT 
"Move forward"
#END

STR C11
JMP HBW_Program.S9

// Rung HBW_Program#20
// Offset 61
#BEGIN FMT_COMMENT 
"Move backward"
#END

STR C12
JMP HBW_Program.S10

// Rung HBW_Program#21
// Offset 63
SG HBW_Program.S2

// Rung HBW_Program#22
// Offset 65
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#23
// Offset 73
STR ST1
ANDPDPF
OUT C6

// Rung HBW_Program#24
// Offset 76
STR X6
ANDN CT0.Done
STR C6
CNT CT0 V1

// Rung HBW_Program#25
// Offset 81
STR ST1
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 500 30

// Rung HBW_Program#26
// Offset 96
STR ST1
OUT Y4

// Rung HBW_Program#27
// Offset 98
STR CT0.Done
JMP HBW_Program.S1

// Rung HBW_Program#28
// Offset 100
STR C3
JMP HBW_Program.S0

// Rung HBW_Program#29
// Offset 102
NOP

// Rung HBW_Program#30
// Offset 103
#BEGIN FMT_COMMENT 
"Conveyor to VGR"
#END

SG HBW_Program.S3

// Rung HBW_Program#31
// Offset 105
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#32
// Offset 113
STR ST1
OUT Y48
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 200 30

// Rung HBW_Program#33
// Offset 129
STRND C6
JMP HBW_Program.S1

// Rung HBW_Program#34
// Offset 132
STR C3
JMP HBW_Program.S0

// Rung HBW_Program#35
// Offset 134
#BEGIN FMT_COMMENT 
"Conveyor to HBW"
#END

SG HBW_Program.S4

// Rung HBW_Program#36
// Offset 136
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#37
// Offset 144
STR ST1
OUT Y49
PWMOUT @HBW_PWM_M1 $HBW_PWM_M1 Y80 200 30

// Rung HBW_Program#38
// Offset 160
STRND C7
JMP HBW_Program.S1

// Rung HBW_Program#39
// Offset 163
STR C3
JMP HBW_Program.S0

// Rung HBW_Program#40
// Offset 165
#BEGIN FMT_COMMENT 
"Move up"
#END

SG HBW_Program.S5

// Rung HBW_Program#41
// Offset 167
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#42
// Offset 175
STR ST1
ANDN X3
OUT Y5
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 200 50

// Rung HBW_Program#43
// Offset 192
STRND C1
JMP HBW_Program.S1

// Rung HBW_Program#44
// Offset 195
STR C3
JMP HBW_Program.S0

// Rung HBW_Program#45
// Offset 197
#BEGIN FMT_COMMENT 
"Move Down"
#END

SG HBW_Program.S6

// Rung HBW_Program#46
// Offset 199
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#47
// Offset 207
STR ST1
OUT Y4
PWMOUT @HBW_PWM_M3 $HBW_PWM_M3 Y82 200 30

// Rung HBW_Program#48
// Offset 223
STRND C8
JMP HBW_Program.S1

// Rung HBW_Program#49
// Offset 226
STR C3
JMP HBW_Program.S0

// Rung HBW_Program#50
// Offset 228
NOP

// Rung HBW_Program#51
// Offset 229
#BEGIN FMT_COMMENT 
"To rack"
#END

SG HBW_Program.S7

// Rung HBW_Program#52
// Offset 231
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#53
// Offset 239
STR ST1
OUT Y50
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 60

// Rung HBW_Program#54
// Offset 255
NOP

// Rung HBW_Program#55
// Offset 256
STRND C9
JMP HBW_Program.S1

// Rung HBW_Program#56
// Offset 259
STR C3
JMP HBW_Program.S0

// Rung HBW_Program#57
// Offset 261
#BEGIN FMT_COMMENT 
"To Conveyor Belt"
#END

SG HBW_Program.S8

// Rung HBW_Program#58
// Offset 263
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#59
// Offset 271
STR ST1
ANDN X0
PWMOUT @HBW_PWM_M2 $HBW_PWM_M2 Y81 200 60
OUT Y51

// Rung HBW_Program#60
// Offset 288
STRND C10
JMP HBW_Program.S1

// Rung HBW_Program#61
// Offset 291
STR C3
JMP HBW_Program.S0

// Rung HBW_Program#62
// Offset 293
SG HBW_Program.S9

// Rung HBW_Program#63
// Offset 295
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#64
// Offset 303
STRND C11
JMP HBW_Program.S1

// Rung HBW_Program#65
// Offset 306
STR C3
JMP HBW_Program.S0

// Rung HBW_Program#66
// Offset 308
STR ST1
ANDN X10
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 200 30
OUT Y6

// Rung HBW_Program#67
// Offset 325
SG HBW_Program.S10

// Rung HBW_Program#68
// Offset 327
STR ST1
CALL HBW_Copy_State 0x1 DST511 "3" "3"

// Rung HBW_Program#69
// Offset 335
STRND C12
JMP HBW_Program.S1

// Rung HBW_Program#70
// Offset 338
STR C3
JMP HBW_Program.S0

// Rung HBW_Program#71
// Offset 340
STR ST1
ANDN X11
PWMOUT @HBW_PWM_M4 $HBW_PWM_M4 Y83 200 30
OUT Y7

// End of Code Block HBW_Program
$PGMEND HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM VGR_Program

// Rung VGR_Program#1
// Offset 0
SG VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#3
// Offset 10
STR ST1
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 100 100

// Rung VGR_Program#4
// Offset 25
STR ST1
ANDN X27
OUT Y26

// Rung VGR_Program#5
// Offset 28
STR ST1
JMP VGR_Program.S1

// Rung VGR_Program#6
// Offset 30
SG VGR_Program.S1

// Rung VGR_Program#7
// Offset 32
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#8
// Offset 40
#BEGIN FMT_COMMENT 
"Rotate CW<br> "
#END

STR C400
JMP VGR_Program.S2

// Rung VGR_Program#9
// Offset 42
#BEGIN FMT_COMMENT 
"Rotate CCW"
#END

STR C401
JMP VGR_Program.S3

// Rung VGR_Program#10
// Offset 44
#BEGIN FMT_COMMENT 
"Move Up"
#END

STR C402
JMP VGR_Program.S4

// Rung VGR_Program#11
// Offset 46
#BEGIN FMT_COMMENT 
"Move Down"
#END

STR C403
JMP VGR_Program.S5

// Rung VGR_Program#12
// Offset 48
#BEGIN FMT_COMMENT 
"Move forward"
#END

STR C404
JMP VGR_Program.S6

// Rung VGR_Program#13
// Offset 50
#BEGIN FMT_COMMENT 
"Move Backward"
#END

STR C405
JMP VGR_Program.S7

// Rung VGR_Program#14
// Offset 52
STR C406
JMP VGR_Program.S8

// Rung VGR_Program#15
// Offset 54
STR C407
JMP VGR_Program.S9

// Rung VGR_Program#16
// Offset 56
SG VGR_Program.S2

// Rung VGR_Program#17
// Offset 58
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#18
// Offset 66
STR ST1
ANDN X27
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y26

// Rung VGR_Program#19
// Offset 83
STRND C400
JMP VGR_Program.S1

// Rung VGR_Program#20
// Offset 86
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#21
// Offset 88
SG VGR_Program.S3

// Rung VGR_Program#22
// Offset 90
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#23
// Offset 98
STR ST1
PWMOUT @VGR_PWM_M3 $VGR_PWM_M3 Y90 200 50
OUT Y27

// Rung VGR_Program#24
// Offset 114
STRND C401
JMP VGR_Program.S1

// Rung VGR_Program#25
// Offset 117
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#26
// Offset 119
SG VGR_Program.S4

// Rung VGR_Program#27
// Offset 121
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#28
// Offset 129
STR ST1
ANDN X25
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y22

// Rung VGR_Program#29
// Offset 146
STRND C402
JMP VGR_Program.S1

// Rung VGR_Program#30
// Offset 149
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#31
// Offset 151
SG VGR_Program.S5

// Rung VGR_Program#32
// Offset 153
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#33
// Offset 161
STR ST1
PWMOUT @VGR_PWM_M1 $VGR_PWM_M1 Y88 200 50
OUT Y23

// Rung VGR_Program#34
// Offset 177
STRND C403
JMP VGR_Program.S1

// Rung VGR_Program#35
// Offset 180
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#36
// Offset 182
SG VGR_Program.S6

// Rung VGR_Program#37
// Offset 184
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#38
// Offset 192
STR ST1
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 50
OUT Y25

// Rung VGR_Program#39
// Offset 208
STRND C404
JMP VGR_Program.S1

// Rung VGR_Program#40
// Offset 211
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#41
// Offset 213
SG VGR_Program.S7

// Rung VGR_Program#42
// Offset 215
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#43
// Offset 223
STR ST1
ANDN X26
PWMOUT @VGR_PWM_M2 $VGR_PWM_M2 Y89 200 100
OUT Y24

// Rung VGR_Program#44
// Offset 240
STRND C405
JMP VGR_Program.S1

// Rung VGR_Program#45
// Offset 243
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#46
// Offset 245
SG VGR_Program.S8

// Rung VGR_Program#47
// Offset 247
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#48
// Offset 255
STR ST1
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 100 15
OUT Y53

// Rung VGR_Program#49
// Offset 271
STRND C406
JMP VGR_Program.S1

// Rung VGR_Program#50
// Offset 274
STR C3
JMP VGR_Program.S0

// Rung VGR_Program#51
// Offset 276
SG VGR_Program.S9

// Rung VGR_Program#52
// Offset 278
STR ST1
CALL VGR_Copy_State 0x1 DST511 "3" "3"

// Rung VGR_Program#53
// Offset 286
STR ST1
PWMOUT @MPO_PWM_M5 $MPO_PWM_M5 Y91 200 70
OUT Y15

// Rung VGR_Program#54
// Offset 302
STRND C407
JMP VGR_Program.S1

// Rung VGR_Program#55
// Offset 305
STR C3
JMP VGR_Program.S0

// End of Code Block VGR_Program
$PGMEND VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM MPO_Program

// Rung MPO_Program#1
// Offset 0
NOP

// End of Code Block MPO_Program
$PGMEND MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM SLD_Program

// Rung SLD_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"State 0: Listen for Doug's instruction to start module."
#END

SG SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR ST1
CALL SLD_Copy_State 0x1 DST511 "3" "3"

// Rung SLD_Program#3
// Offset 10
STR ST1
JMP SLD_Program.S1

// Rung SLD_Program#4
// Offset 12
SG SLD_Program.S1

// Rung SLD_Program#5
// Offset 14
STR ST1
ANDND X35
OFFDTMR T0 3000 C1600

// Rung SLD_Program#6
// Offset 20
STR C1600
OUT Y30

// Rung SLD_Program#7
// Offset 22
STRND C1600
JMP SLD_Program.S2

// Rung SLD_Program#8
// Offset 25
SG SLD_Program.S2

// Rung SLD_Program#9
// Offset 27
NOP

// End of Code Block SLD_Program
$PGMEND SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM SSC_Program

// Rung SSC_Program#1
// Offset 0
NOP

// End of Code Block SSC_Program
$PGMEND SSC_Program

#BEGIN ELEMENT_DOC
"X0","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierOv en_I9"
"X25","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInle t_I2"
"X36","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierWh ite_I5"
"X38","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBlu e_I7"
"X40","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOut sourcing_I4"
"X44","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotateImp 1_B5"
"X57","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotateImp 2_B6"
"Y4","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBelt _Q4"
"Y52","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","HBW_PWM_M1","","QW_HBW_PWM_Conveyor Belt_M1"
"Y81","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Vertical_ M3"
"Y82","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_VerticalA xis_M3"
"Y83","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Cantileve r_M4"
"Y88","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertical_ M1"
"Y89","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horizontal _M2"
"Y90","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotate_M 3"
"Y91","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacuum_ M5"
"Y92","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertical_ M1"
"Y93","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horizontal _M2"
"Y94","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_TurnTable _M1"
"WX0","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","NOP","",""
#END

